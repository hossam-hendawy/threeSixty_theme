{"version":3,"file":"8552.3e85f270df319e43e452.chunk.js","mappings":"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","sources":["webpack://threeSixty_theme/./src/scripts/general/autoplay-swiper.js","webpack://threeSixty_theme/./src/blocks/tools_and_platforms_block/index.js"],"sourcesContent":["import { debounce } from \"lodash/function\";\r\n\r\nconst defaultOptions = {\r\n  slidesPerView: 2,\r\n  speed: 20000,\r\n  spaceBetween: 20,\r\n  breakpoints: {\r\n    992: {\r\n      slidesPerView: 5,\r\n      spaceBetween: 60\r\n    },\r\n    600: {\r\n      slidesPerView: 3,\r\n      spaceBetween: 40\r\n    }\r\n  }\r\n};\r\n\r\nexport function autoplaySwiper(block, options = {}) {\r\n  const { slidesPerView, spaceBetween, breakpoints, speed } = {\r\n    ...defaultOptions,\r\n    ...options\r\n  };\r\n  const root = block.querySelector(\".autoplay-swiper-cont\");\r\n  const container = block.querySelector(\".autoplay-swiper\");\r\n  const wrapper = block.querySelector(\".autoplay-swiper-wrapper\");\r\n  const modal = document.querySelector(\".custom-modal\");\r\n  const customModalContent = document.querySelector(\".custom-modal-content\");\r\n  if (!container || !root || !wrapper) return;\r\n\r\n  container.addEventListener(\"click\", function(event) {\r\n    // Check if the clicked element or its parent has the class 'play-btn'\r\n    let btn = event.target.closest(\".play-btn\");\r\n    if (!btn) return;\r\n\r\n    document.documentElement.classList.add(\"modal-opened\");\r\n    modal.classList.add(\"modal-active\");\r\n\r\n    // Clear existing content in the modal\r\n    customModalContent.innerHTML = \"\";\r\n\r\n    const modalTemplate = btn\r\n      .closest(\".autoplay-swiper-slide\")\r\n      .querySelector(\".video-template\");\r\n    let clone = modalTemplate.content.cloneNode(true);\r\n    customModalContent.appendChild(clone);\r\n  });\r\n\r\n  container.style.animationDuration = `${speed / 1000}s`;\r\n  container.appendChild(wrapper.cloneNode(true));\r\n\r\n  const points = Object.keys(breakpoints).sort((a, b) => {\r\n    return b - a;\r\n  });\r\n\r\n  let activeSpaceBetween = spaceBetween;\r\n  let activeSlidesPerView = slidesPerView;\r\n  let activeContainerWidth = root.clientWidth;\r\n  const partClones = [];\r\n\r\n  const updatePartCount = () => {\r\n    const wrapperWidth = wrapper.clientWidth;\r\n    container.style.width = `${wrapperWidth}px`;\r\n    const rootWidth = root.clientWidth;\r\n    const cloneCount = Math.floor(rootWidth / wrapperWidth);\r\n\r\n    if (cloneCount > partClones.length) {\r\n      const addCount = cloneCount - partClones.length;\r\n      [...Array(addCount)].forEach(() => {\r\n        const newNode = wrapper.cloneNode(true);\r\n        partClones.push(newNode);\r\n        container.appendChild(newNode);\r\n        // Reattach event listeners to the cloned node\r\n        newNode.querySelectorAll(\".play-btn\").forEach(btn => {\r\n          btn.addEventListener(\"click\", function() {\r\n            document.documentElement.classList.add(\"modal-opened\");\r\n            modal.classList.add(\"modal-active\");\r\n            const modalTemplate = btn\r\n              .closest(\".autoplay-swiper-slide\")\r\n              .querySelector(\".video-template\");\r\n            let clone = modalTemplate.content.cloneNode(true);\r\n            customModalContent.appendChild(clone);\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    // ... rest of your code for removing clones if needed\r\n  };\r\n\r\n  const handleSlidesWidth = debounce(() => {\r\n    if (points.length) {\r\n      const currentBreakpoint = points.find(\r\n        point => window.innerWidth >= point\r\n      );\r\n      if (currentBreakpoint) {\r\n        activeSlidesPerView =\r\n          breakpoints[currentBreakpoint].slidesPerView ||\r\n          points.reverse().find(point => window.innerWidth >= point)\r\n            ?.slidesPerView ||\r\n          slidesPerView;\r\n        activeSpaceBetween =\r\n          breakpoints[currentBreakpoint].spaceBetween ||\r\n          points.reverse().find(point => window.innerWidth >= point)\r\n            ?.spaceBetween ||\r\n          spaceBetween;\r\n      } else {\r\n        activeSlidesPerView = slidesPerView;\r\n        activeSpaceBetween = spaceBetween;\r\n      }\r\n    }\r\n    activeContainerWidth = root.clientWidth;\r\n    const slideWidth =\r\n      (activeContainerWidth - (activeSlidesPerView - 1) * activeSpaceBetween) /\r\n      activeSlidesPerView;\r\n    const slides = block.querySelectorAll(\".autoplay-swiper-slide\");\r\n    slides.forEach((slide, index) => {\r\n      slide.style.width = `${slideWidth}px`;\r\n      slide.style.marginRight = `${activeSpaceBetween}px`;\r\n    });\r\n    updatePartCount();\r\n  }, 200);\r\n\r\n  handleSlidesWidth();\r\n\r\n  const resizeHandler = () =>\r\n    activeContainerWidth !== container.clientWidth && handleSlidesWidth();\r\n  window.addEventListener(\"resize\", resizeHandler);\r\n\r\n}\r\n","import './style.scss';\r\nimport {imageLazyLoading} from \"../../scripts/functions/imageLazyLoading\";\r\nimport {animations} from \"../../scripts/general/animations\";\r\nimport {autoplaySwiper} from \"../../scripts/general/autoplay-swiper.js\"\r\n\r\n/**\r\n * @author HOSSAM\r\n * @param block {HTMLElement}\r\n * @returns {Promise<void>}\r\n */\r\nconst toolsAndPlatformsBlock = async (block) => {\r\n\r\n  const container = block.querySelector(\".autoplay-swiper\");\r\n  container?.addEventListener(\"mouseover\", () => {\r\n    container.style.animationPlayState = \"paused\";\r\n  });\r\n  container?.addEventListener(\"mouseout\", () => {\r\n    container.style.animationPlayState = \"running\";\r\n  });\r\n\r\n  autoplaySwiper(block, {\r\n    slidesPerView: 4,\r\n    spaceBetween: 20,\r\n    speed: 20000,\r\n    breakpoints: {\r\n      600: {\r\n        slidesPerView: 5,\r\n        spaceBetween: 32\r\n      },\r\n      768: {\r\n        slidesPerView: 7,\r\n        spaceBetween: 32\r\n      },\r\n    }\r\n  });\r\n\r\n  animations(block);\r\n  imageLazyLoading(block);\r\n};\r\n\r\nexport default toolsAndPlatformsBlock;\r\n\r\n"],"names":["defaultOptions","slidesPerView","speed","spaceBetween","breakpoints","async","container","block","querySelector","addEventListener","style","animationPlayState","options","arguments","length","undefined","_objectSpread","root","wrapper","modal","document","customModalContent","event","btn","target","closest","documentElement","classList","add","innerHTML","clone","content","cloneNode","appendChild","animationDuration","points","Object","keys","sort","a","b","activeSpaceBetween","activeSlidesPerView","activeContainerWidth","clientWidth","partClones","handleSlidesWidth","debounce","currentBreakpoint","find","point","window","innerWidth","reverse","slideWidth","querySelectorAll","forEach","slide","index","width","marginRight","updatePartCount","wrapperWidth","rootWidth","cloneCount","Math","floor","addCount","Array","newNode","push","resizeHandler","autoplaySwiper","animations","imageLazyLoading"],"sourceRoot":""}